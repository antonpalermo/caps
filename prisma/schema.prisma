// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

enum Role {
  student
  professor
  admin
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role?
  accounts      Account[]
  sessions      Session[]
  courses       Course[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("vtokens")
}

model Course {
  id          String   @id @default(cuid())
  name        String?  @default("Untitled")
  description String?  @default("Blank untitled template")
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
  docs        Doc[]
  dateCreated DateTime @default(now())
  dateUpdated DateTime @updatedAt

  @@unique([id])
  @@map("courses")
}

model Doc {
  id          String   @id @default(cuid())
  header      String
  body        Json?
  course      Course?  @relation(fields: [courseId], references: [id])
  courseId    String?
  dateCreated DateTime @default(now())
  dateUpdated DateTime @updatedAt

  @@unique([id])
  @@map("docs")
}
